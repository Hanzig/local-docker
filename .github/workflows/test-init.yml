name: Test build and init with docker-sync

on: 
  pull_request:
    branches: 
    - master

jobs:
  build:

    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v1
    - name: Run a one-line script
      if: github.event_name == 'pull_request'
      run: echo This event is a pull request. Test build ./ld init.
#    - name: Install homebrew (installed on macOS-latest as per https://help.github.com/en/actions/automating-your-workflow-with-github-actions/software-installed-on-github-hosted-runners#macos-1015)
#      run: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    - name: Install Docker and docker-compose
      run: |
        brew cask install docker
        brew install docker-compose
        open -v -F -g -a /Applications/Docker.app
        echo $?
        ls -h /Applications | grep Docker
        which docker || echo 'no docker in path'
        echo $PATH
        ls -lh /usr/local/bin/ | grep docker
        while ! docker system info > /dev/null 2>&1; do echo "Waiting Docker.app to start, round ${ROUND}" && sleep 2 && (( ROUND + 1 )) ; done
        docker system info
        docker ps 
        docker-compose --version

    - name: Install docker-sync
      run: |
        gem install docker-sync
        docker-sync

    - name: List what is in the project folder.
      run: ls -lha

    - name: Check the type of ld
      run: file ld

    - name: Run init and see where it gets us
      run: ./ld init

